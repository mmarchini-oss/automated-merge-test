---
name: CI

on:
  push:
  schedule:
    - cron: "*/5 * * * *"

jobs:
  commitQueue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@0.8.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log(context)
            console.log(github)
            const repo = context.repository.name;
            const owner = context.repository.owner.name;
            console.log(`:set-env: GITHUB_OWNER=${owner}`)
            console.log(`:set-env: GITHUB_REPO=${repo}`)
            return { owner, repo }
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(github) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump job context
        run: echo "$GITHUB_OWNER $GITHUB_REPO"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(steps) }}
        run: echo "$JOB_CONTEXT"
      # - name: Dump job context
      #   env:
      #     JOB_CONTEXT: ${{ toJson(result) }}
      #   run: echo "$JOB_CONTEXT"
      - uses: octokit/graphql-action@v2.x
        id: get_mergable_pull_requests
        with:
          query: |
            query release($owner:String!,$repo:String!, $baseRefName:String!) {
              repository(owner:$owner, name:$repo) {
                pullRequests(baseRefName: $baseRefName, labels: ["commit-queue"], states: OPEN, last: 100) {
                  nodes {
                    number
                  }
                }
              }
            }
          owner: ${{ steps.result.owner }}
          repo: ${{ steps.result.repo }}
          baseRefName: "master"
          # baseRefName: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: "echo 'latest release: ${{ steps.get_mergable_pull_requests.outputs.data }}'"
